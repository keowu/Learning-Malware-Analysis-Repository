Conteúdo de anotações das páginas 129 - 133


Loops executão um bloco enquanto um condição não é satisfeita, Os dois mais comuns tipos de loops são o for e o while, Os saltos e condições para os mesmos
fins no assembly, porem você vera uma leve diferença entre eles. veja o seguinte exemplo de um simples loop:

for (inicialização; condição; incremento){
    bloco de código
}

um While é quase igual ao for, ele tem uma inicialização, condição e um incremento/decremento porem não na mesma chave

inicialização
while(condição){
  bloco de código
  incremento/decremento
}

Vamos tentar entender como funcionaria esses loops na linguagem C


vaja o exemplo do for:

for(int i = 0; i < 5; i++){
}

ou

int i = 0;
for(; i < 5; ++i){
}

ou

int i;
for(i = 0; i < 5; ++i){
}

veja o exemplo do While:

int i = 0;
while(i < 5){
 ++i;
}

ou

int i = -1;
while(++i < 5){
}

Nos conhecemos os saltos que são usados para implementar condições e loops, volte sua atenção aos loops, vamos tentar determinar todas as situações
quando esses saltos seriam feitos, quando i é maior ou igual a 5, um salto é feito, e transfere a execução para fora do laço, simplificando
equanto o i for menor ou igual a 5, a variável i é incrementada para suprir a condição do salto.

Veja um exemplo:

mov [i], 0

while_inicio:
	cmp [i], 5
        jge end
	mov eax, [i]
	add eax, 1
	mov [i], eax
	jmp while_inicio
end:
	ret


Desafio de Assembly #4
Vamos traduzir o seguinte código para uma linguagem de alto nível equivalente, use as tecnicas apresentadas e os conceitos aprendidos e resolva esse desafio






