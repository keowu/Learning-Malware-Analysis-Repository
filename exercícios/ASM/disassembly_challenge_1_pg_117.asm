======================================
	Minha solução
======================================

mov dword ptr [ebp-4], 16h
mov dword ptr [ebp-8], 5
mov eax, [ebp-4]
add eax, [ebp-8]
mov [ebp - 0Ch], eax
mov ecx, [ebp-4]
sub ecx, [ebp-8]
mov [ebp-10h], ecx



Pseudo code
mov dword ptr [ebp-4], 16h        ; ARR[0] = 0x16
mov dword ptr [ebp-8], 5          ; ARR[1] = 0x05
mov eax, [ebp-4]                  ; EAX = ARR[0]
add eax, [ebp-8]                  ; EAX += ARR[1]
mov [ebp - 0Ch], eax              ; ARR[2] = EAX
mov ecx, [ebp-4]                  ; ECX = ARR[0]
sub ecx, [ebp-8]                  ; ECX -= ARR[1]
mov [ebp-10h], ecx                ; ARR[2] = ECX


; O TIPO DOS DADOS VAI SER INTEIRO PELOS SEGUINTES MOTIVOS:
; 1º Usa-se somente 1 Byte ou 8 bits
; 2º Não tabalha com valores altos que superem e demandem de algo maior que 4 bytes na memória 

CÓDIGO EM C

void main(void){
        int ARR[4] = { 0x16, 0x05, 0, 0};
	ARR[0] += ARR[1];
	ARR[2] = ARR[0];
	ARR[0] -= ARR[1];
	ARR[3] =  ARR[1];
}


2º Forma


mov dword ptr [a], 16h   ; a = 0x16
mov dword ptr [b], 5     ; b = 5
mov eax, [a]             ; EAX = a
add eax, [b]             ; EAX += b
mov [c], eax             ; c = EAX 
mov ecx, [a]             ; ECX = a
sub ecx, [b]             ; ECX -= b
mov [d], ecx             ; c = ECX


void main(void){
	int a = 0x16;
 	int b = 5;
	int EAX = a;
	EAX += b;
	c = EAX;
	ECX = a;
	ECX -= b;
	d = ECX;	
}


==================================================
	RESOLUÇÃO DO LIVRO
==================================================
mov dword ptr [ebp-4], 16h
mov dword ptr [ebp-8], 5
mov eax, [ebp-4]
add eax, [ebp-8]
mov [ebp - 0Ch], eax
mov ecx, [ebp-4]
sub ecx, [ebp-8]
mov [ebp-10h], ecx

1º Passo adicionar labels
mov dword ptr [a], 16h ; lembre-se h ao final do número representa que ele é hexadecimal, por exemplo: 16h = 0x16 ou 22 em decimal
mov dword ptr [b], 5 
mov eax, [a]
add eax, [b]
mov [c], eax
mov ecx, [a]
sub ecx, [b]
mov [d], ecx

2º Passo fazer a tradução simples para alto nível removendo os registradores
a = 0x16;
b = 5;
eax = a;
eax = eax + b;
c = eax;
ecx = a;
ecx = ecx - b;
d = ecx;

3º Agora vamos mudar o nome desses registradores para algo mais amigavel e remover coisas desnecessárias:
a = 22
b = 5
c = a + b
d = a-b;
4º Para determinarmos os tipos de dados precisamos pensar que subtração e adição fazem operações com inteiro também e que nesse contexto
não foram utilizados nada que pudessem gerar números quebrados, veja o seguinte exemplo:
int a, b, c, d;
a = 22;
b = 5;
c = a + b;
d = a - b;

==============================================
	Código fonte original
==============================================
int num1 = 22;
int num2 = 5;
int diff;
int sum;
sum = num1 + num2;
diff = num1 - num2;
